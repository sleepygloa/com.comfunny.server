
plugins {
    id 'java'
    id 'org.springframework.boot' version '2.4.9'
//    id("io.spring.dependency-management") version "1.0.15.RELEASE"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.comfunny.server'
version '1.0.1-SNAPSHOT-' + new Date().format("yyyyMMddHHmmss")

repositories {
    mavenCentral()
}

dependencies {
    //스프링 부트 관련
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.projectlombok:lombok'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

    //데이터베이스 관련
    implementation 'com.h2database:h2'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')
    implementation('org.hibernate:hibernate-entitymanager')
    implementation('org.mariadb.jdbc:mariadb-java-client')
    implementation('org.springframework.boot:spring-boot-starter-jdbc')
    implementation('org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16')

    //보안 관련
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'


    //DTO TO ENTITY, ENTITY TO DTO
    implementation('org.modelmapper:modelmapper:3.1.0')

    implementation('org.apache.poi:poi-ooxml:5.0.0')
//
////    testImplementation platform('org.junit:junit-bom:5.9.1')
////    testImplementation 'org.junit.jupiter:junit-jupiter'
}



//def frontendDir = "$projectDir/src/main/frontend"
//
//sourceSets {
//    main {
//        resources { srcDirs = ["$projectDir/src/main/resources"]
//        }
//    }
//}
//
//processResources { dependsOn "copyReactBuildFiles" }
//
//task installReact(type: Exec) {
//    workingDir "$frontendDir"
//    inputs.dir "$frontendDir"
//    group = BasePlugin.BUILD_GROUP
////    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
////        commandLine "npm.cmd", "audit", "fix"
////        commandLine 'npm.cmd', 'install' }
////    else {
////        commandLine "npm", "audit", "fix" commandLine 'npm', 'install'
//        commandLine "yarn", "install"
////    }
//}
//
//task buildReact(type: Exec) {
//    dependsOn "installReact"
//    workingDir "$frontendDir"
//    inputs.dir "$frontendDir"
//    group = BasePlugin.BUILD_GROUP
////    if (System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')) {
////        commandLine "npm.cmd", "run-script", "build"
////    } else {
////        commandLine "npm", "run-script", "build"
//        commandLine "yarn", "run", "start"
////    }
//}
//
//task copyReactBuildFiles(type: Copy) {
//    dependsOn "buildReact"
//    from "$frontendDir/build"
//    into "$projectDir/src/main/resources/static"
//}